{"version":3,"sources":["services/auth.ts","services/api.ts","services/index.ts","context/auth.tsx","components/nav.tsx","components/content.tsx","components/create-content.tsx","components/dashboard.tsx","components/create-dashboard.tsx","pages/Dashboard.tsx","pages/login.tsx","pages/register.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["AuthService","url","_token","this","email","password","a","fetch","method","headers","body","JSON","stringify","res","ok","json","data","accessToken","name","ApiService","auth","authorization","token","then","text","dashboardId","contentId","position","srcDashboardId","destDashboardId","authService","apiService","authContext","createContext","login","logout","undefined","AuthProvider","children","useState","setToken","Provider","value","useAuth","useContext","StyledNav","styled","nav","Nav","onClick","ContentStyled","div","props","isDragging","Content","id","index","onDelete","draggableId","provided","snaphshot","ref","innerRef","draggableProps","dragHandleProps","DeleteButton","button","CreateContent","create","useForm","handleSubmit","register","control","StyledForm","onSubmit","setValue","placeholder","defaultValue","required","type","form","DashboardStyled","ContentList","isDraggingOver","Dashboard","contents","createContent","deleteContent","provider","snapshot","length","droppableId","droppableProps","map","content","CreateDashboardStyled","CreateDashboard","onCreate","title","maxLength","StyledApp","Dashboards","dashboards","setDashboards","onDashboardDragEnd","result","destination","moveDashboard","createDashboard","deleteDashboard","onContentDragEnd","source","moveContent","useEffect","getDashboards","getDashboard","onDragEnd","direction","dashboard","creatContent","key","creatDashboard","LoginPage","err","setErr","to","LoginPageStyled","className","LoginFormStyled","ErrMsg","p","RegisterPage","registered","setRegistered","RegisterPageStyled","RegisterFormStyled","Container","App","path","PrivateRoute","rest","render","location","pathname","state","from","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.13f97ba5.chunk.js","sourcesContent":["export class AuthService {\n  private _token: string | undefined;\n\n  constructor(private readonly url: string) {}\n\n  get token() {\n    return this._token;\n  }\n\n  async login(email: string, password: string): Promise<boolean> {\n    const res = await fetch(`${this.url}/login`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({ email, password }),\n    });\n    if (res.ok) {\n      const data: { accessToken: string } = await res.json();\n      this._token = data.accessToken;\n      return true;\n    }\n    return false;\n  }\n\n  async register(email: string, name: string, password: string): Promise<boolean> {\n    const res = await fetch(`${this.url}/register`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({ email, password, name }),\n    });\n    return res.ok;\n  }\n}\n","import { Dashboard } from '../models';\nimport { AuthService } from './auth';\n\nexport class ApiService {\n  constructor(private readonly url: string, private readonly auth: AuthService) {}\n\n  getDashboards(): Promise<Dashboard[]> {\n    return fetch(this.url, {\n      headers: {\n        'content-type': 'application/json',\n        authorization: `Bearer ${this.auth.token}`,\n      },\n    }).then((res) => res.json());\n  }\n\n  createContent(text: string, dashboardId: string) {\n    return fetch(`${this.url}/${dashboardId}`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        authorization: `Bearer ${this.auth.token}`,\n      },\n      body: JSON.stringify({ text: text }),\n    }).then((res) => res.json());\n  }\n\n  createDashboard(name: string) {\n    return fetch(`${this.url}/`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        authorization: `Bearer ${this.auth.token}`,\n      },\n      body: JSON.stringify({ name: name }),\n    }).then((res) => res.json());\n  }\n\n  deleteContent(contentId: string, dashboardId: string) {\n    return fetch(`${this.url}/${dashboardId}/${contentId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json',\n        authorization: `Bearer ${this.auth.token}`,\n      },\n    }).then((res) => res.json());\n  }\n\n  deleteDashboard(dashboardId: string) {\n    return fetch(`${this.url}/${dashboardId}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json',\n        authorization: `Bearer ${this.auth.token}`,\n      },\n    }).then((res) => res.json());\n  }\n\n  moveDashboard(dashboardId: string, position: number): Promise<Dashboard[]> {\n    return fetch(`${this.url}/${dashboardId}/move`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        authorization: `Bearer ${this.auth.token}`,\n      },\n      body: JSON.stringify({ position: position }),\n    }).then((res) => res.json());\n  }\n\n  moveContent(\n    srcDashboardId: string,\n    contentId: string,\n    destDashboardId: string,\n    position: number\n  ): Promise<Dashboard[]> {\n    return fetch(`${this.url}/${srcDashboardId}/${contentId}/move`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n        authorization: `Bearer ${this.auth.token}`,\n      },\n      body: JSON.stringify({ position: position, dashboardId: destDashboardId }),\n    }).then((res) => res.json());\n  }\n}\n","import { AuthService } from './auth';\nimport { ApiService } from './api';\n\nconst url = 'http://localhost:4000';\nexport const authService = new AuthService(`${url}/auth`);\nexport const apiService = new ApiService(`${url}/app`, authService);\n","import { createContext, FC, useContext, useState } from 'react';\nimport { authService } from '../services';\n\ninterface AuthContext {\n  login: (email: string, password: string) => Promise<boolean>;\n  logout: () => void;\n  token: string | undefined;\n}\n\nexport const authContext = createContext<AuthContext>({\n  login: async () => {\n    return false;\n  },\n  logout: () => {},\n  token: undefined,\n});\n\nexport const AuthProvider: FC = ({ children }) => {\n  const [token, setToken] = useState<string>();\n  const login = async (email: string, password: string) => {\n    const res = await authService.login(email, password);\n    if (res) {\n      setToken(authService.token);\n    }\n    return res;\n  };\n  const logout = () => setToken(undefined);\n  return <authContext.Provider value={{ token, login, logout }}>{children}</authContext.Provider>;\n};\n\nexport const useAuth = () => {\n  return useContext(authContext);\n};\n","import styled from '@emotion/styled';\nimport { useAuth } from '../context/auth';\n\nconst StyledNav = styled.nav`\n  background-color: black;\n  color: white;\n  height: 60px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 20px;\n  .spacer {\n    flex-grow: 1;\n  }\n  button {\n    border: 1px solid rgba(0, 0, 0, 0);\n    cursor: pointer;\n    &:hover {\n      border: 1px solid white;\n    }\n    background: none;\n    color: white;\n    padding: 10px;\n    font-size: 12pt;\n    font-weight: bold;\n  }\n`;\n\nexport const Nav = () => {\n  const { logout } = useAuth();\n\n  return (\n    <StyledNav>\n      <p>Lacerba d&d</p>\n      <button onClick={logout}>logout</button>\n    </StyledNav>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FC } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst ContentStyled = styled.div<{ isDragging: boolean }>`\n  font-size: 12px;\n  padding: 5px;\n  border: 1px solid #ccc;\n  background-color: ${(props) => (props.isDragging ? 'lightgreen' : 'white')};\n  margin: 2px;\n  display: flex;\n  justify-content: space-between;\n`;\n\ninterface ContentProps {\n  text: string;\n  id: string;\n  index: number;\n  onDelete: () => void;\n}\n\nexport const Content: FC<ContentProps> = ({ text, id, index, onDelete }) => {\n  return (\n    <div>\n      <Draggable draggableId={id} index={index}>\n        {(provided, snaphshot) => (\n          <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n            <ContentStyled isDragging={snaphshot.isDragging}>\n              <span>{text}</span>\n              <DeleteButton onClick={onDelete}> x </DeleteButton>\n            </ContentStyled>\n          </div>\n        )}\n      </Draggable>\n    </div>\n  );\n};\n\nconst DeleteButton = styled.button`\n  background-color: #ff4d4d;\n  color: white;\n  font-size: 15px;\n  font-weight: bold;\n  border: none;\n  border-radius: 5px;\n  width: 20px;\n  height: 20px;\n  display: grid;\n  place-content: center;\n  margin: 0;\n  padding: 0;\n  &:hover {\n    background-color: #ff1414;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { FC } from 'react';\nimport { useForm } from 'react-hook-form';\n\nexport const CreateContent: FC<{ create: (text: string) => void }> = ({ create }) => {\n  const { handleSubmit, register, control } = useForm<{ name: string }>();\n  const onSubmit = (data: { name: string }) => {\n    create(data.name);\n    control.setValue('name', '');\n  };\n  return (\n    <StyledForm onSubmit={handleSubmit(onSubmit)}>\n      <input name=\"name\" placeholder=\"crea contenuto\" defaultValue=\"\" ref={register({ required: true })} />\n      <input type=\"submit\" />\n    </StyledForm>\n  );\n};\n\nconst StyledForm = styled.form`\n  padding: 10px;\n`;\n","import styled from '@emotion/styled';\nimport { FC } from 'react';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport { Content } from './content';\nimport { CreateContent } from './create-content';\n\nconst DashboardStyled = styled.div`\n  width: 220px;\n  height: 100%;\n  min-height: 400px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  overflow-y: scroll;\n  flex-grow: 1;\n  h2 {\n    margin: 0;\n    padding: 10px 0;\n    border-bottom: 1px solid #ccc;\n    font-size: 15px;\n    text-align: center;\n  }\n`;\n\nconst ContentList = styled.div<{ isDraggingOver: boolean }>`\n  background-color: ${(props) => (props.isDraggingOver ? 'lightblue' : 'white')};\n  height: 100%;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\ninterface DashboardProps {\n  id: string;\n  name: string;\n  index: number;\n  contents: { text: string; id: string }[];\n  createContent: (name: string) => void;\n  deleteContent: (id: string) => void;\n  onDelete: () => void;\n}\n\nexport const Dashboard: FC<DashboardProps> = ({\n  id,\n  name,\n  contents,\n  index,\n  createContent,\n  deleteContent,\n  onDelete,\n}) => {\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provider, snapshot) => (\n        <DashboardStyled {...provider.draggableProps} ref={provider.innerRef}>\n          <h2 {...provider.dragHandleProps}>{name}</h2>\n          {contents.length === 0 && <DeleteButton onClick={onDelete}>Delete</DeleteButton>}\n          <Droppable droppableId={id} type=\"content\">\n            {(provider, snapshot) => (\n              <ContentList\n                isDraggingOver={snapshot.isDraggingOver}\n                ref={provider.innerRef}\n                {...provider.droppableProps}\n              >\n                {contents.map((content, index) => (\n                  <Content\n                    onDelete={() => deleteContent(content.id)}\n                    key={content.id}\n                    id={content.id}\n                    index={index}\n                    text={content.text}\n                  />\n                ))}\n                {provider.placeholder}\n              </ContentList>\n            )}\n          </Droppable>\n\n          <CreateContent create={createContent} />\n        </DashboardStyled>\n      )}\n    </Draggable>\n  );\n};\n\nconst DeleteButton = styled.button`\n  margin: 2px;\n  background-color: #ff4d4d;\n  color: white;\n  font-size: 10px;\n  font-weight: bold;\n  border: none;\n  border-radius: 5px;\n  padding: 10px 5px;\n  &:hover {\n    background-color: #ff1414;\n  }\n`;\n","import { FC } from 'react';\nimport styled from '@emotion/styled';\nimport { useForm } from 'react-hook-form';\n\nconst CreateDashboardStyled = styled.div``;\n\ninterface CreateDashboardProps {\n  onCreate: (title: string) => void;\n}\n\ninterface CreateDashboardFormData {\n  title: string;\n}\n\nexport const CreateDashboard: FC<CreateDashboardProps> = ({ onCreate }) => {\n  const { register, handleSubmit, control } = useForm<CreateDashboardFormData>();\n  const onSubmit = (data: CreateDashboardFormData) => {\n    onCreate(data.title);\n    control.setValue('title', '');\n  };\n\n  return (\n    <CreateDashboardStyled>\n      <h2>Crea Dashboard</h2>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input name=\"title\" ref={register({ required: true, maxLength: 20 })} />\n        <button type=\"submit\"> Crea </button>\n      </form>\n    </CreateDashboardStyled>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Dashboard } from '../components/dashboard';\nimport { Dashboard as DashboardModel } from '../models';\nimport { DragDropContext, Droppable, DropResult } from 'react-beautiful-dnd';\nimport { useEffect, useState } from 'react';\nimport { apiService } from '../services';\nimport { CreateDashboard } from '../components/create-dashboard';\n\nconst StyledApp = styled.div`\n  display: flex;\n  flex-direction: row;\n  gap: 10px;\n  min-width: 400px;\n  overflow-y: scroll;\n`;\n\nexport function Dashboards() {\n  const [dashboards, setDashboards] = useState<DashboardModel[]>([]);\n  useEffect(() => {\n    async function getDashboard() {\n      const dashboards = await apiService.getDashboards();\n      setDashboards(dashboards);\n    }\n    getDashboard();\n  }, []);\n\n  async function onDashboardDragEnd(result: DropResult) {\n    if (!result.destination) {\n      return;\n    }\n    const position = result.destination.index;\n    const dashboardId = result.draggableId;\n    const dashboards = await apiService.moveDashboard(dashboardId, position);\n    setDashboards(dashboards);\n  }\n\n  async function creatContent(name: string, dashboardId: string) {\n    const dashboards = await apiService.createContent(name, dashboardId);\n    setDashboards(dashboards);\n  }\n\n  async function creatDashboard(name: string) {\n    const dashboards = await apiService.createDashboard(name);\n    setDashboards(dashboards);\n  }\n\n  async function deleteContent(contentId: string, dashboardId: string) {\n    const dashboards = await apiService.deleteContent(contentId, dashboardId);\n    setDashboards(dashboards);\n  }\n\n  async function deleteDashboard(dashboardId: string) {\n    const dashboards = await apiService.deleteDashboard(dashboardId);\n    setDashboards(dashboards);\n  }\n\n  async function onContentDragEnd(result: DropResult) {\n    if (!result.destination) {\n      return;\n    }\n    const srcDashboardId = result.source.droppableId;\n    const contentId = result.draggableId;\n    const destDashboardId = result.destination.droppableId;\n    const position = result.destination.index;\n    const dashboards = await apiService.moveContent(srcDashboardId, contentId, destDashboardId, position);\n    setDashboards(dashboards);\n  }\n\n  async function onDragEnd(result: DropResult) {\n    const type = result.type;\n    if (type === 'DASHBOARD') {\n      await onDashboardDragEnd(result);\n    } else if (type === 'content') {\n      await onContentDragEnd(result);\n    }\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"list\" direction=\"horizontal\" type=\"DASHBOARD\">\n        {(provided) => (\n          <StyledApp ref={provided.innerRef} {...provided.droppableProps}>\n            {dashboards.map((dashboard, index) => (\n              <Dashboard\n                deleteContent={(contentId) => deleteContent(contentId, dashboard.id)}\n                createContent={(name: string) => creatContent(name, dashboard.id)}\n                onDelete={() => deleteDashboard(dashboard.id)}\n                index={index}\n                {...dashboard}\n                key={dashboard.id}\n              />\n            ))}\n            {provided.placeholder}\n            <CreateDashboard onCreate={(name) => creatDashboard(name)} />\n          </StyledApp>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n}\n","import styled from '@emotion/styled';\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Redirect, Link } from 'react-router-dom';\nimport { useAuth } from '../context/auth';\nimport { authService } from '../services';\n\ninterface LoginData {\n  email: string;\n  password: string;\n}\n\nexport const LoginPage = () => {\n  const [err, setErr] = useState<boolean>(false);\n  const { token, login } = useAuth();\n  const { handleSubmit, register } = useForm<{ name: string }>();\n  const onSubmit = async (data: LoginData) => {\n    setErr(false);\n    const res = await login(data.email, data.password);\n    setErr(!res);\n  };\n  if (token) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <LoginPageStyled>\n      <div className=\"login\">\n        <h1> Login User</h1>\n        <LoginFormStyled onSubmit={handleSubmit(onSubmit)}>\n          <input name=\"email\" type=\"email\" placeholder=\"email\" defaultValue=\"\" ref={register({ required: true })} />\n          <input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"password\"\n            defaultValue=\"\"\n            ref={register({ required: true })}\n          />\n          {err && <ErrMsg>Invalid login</ErrMsg>}\n          <button type=\"submit\"> Login</button>\n\n          <Link to=\"/register\"> Register </Link>\n        </LoginFormStyled>\n      </div>\n    </LoginPageStyled>\n  );\n};\n\nconst ErrMsg = styled.p`\n  color: red;\n`;\n\nconst LoginFormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  gap: 10px;\n  input {\n    height: 30px;\n    padding: 0 10px;\n  }\n  button {\n    background: #4ad2ff;\n    height: 30px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    &:hover {\n      background: #06baf6;\n    }\n  }\n`;\n\nconst LoginPageStyled = styled.div`\n  display: grid;\n  place-content: center;\n  .login {\n    border: 1px solid black;\n    margin-top: 20px;\n    padding: 20px;\n    max-width: 90%;\n    width: 800px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Redirect, Link } from 'react-router-dom';\nimport { useAuth } from '../context/auth';\nimport { authService } from '../services';\n\ninterface RegisterData {\n  email: string;\n  password: string;\n  name: string;\n}\n\nexport const RegisterPage = () => {\n  const [err, setErr] = useState<boolean>(false);\n  const [registered, setRegistered] = useState<boolean>(false);\n  const { token } = useAuth();\n  const { handleSubmit, register } = useForm<{ name: string }>();\n  const onSubmit = async (data: RegisterData) => {\n    setErr(false);\n    const res = await authService.register(data.email, data.name, data.password);\n    setErr(!res);\n    if (res) {\n      setRegistered(true);\n    }\n  };\n  if (token) {\n    return <Redirect to=\"/\" />;\n  }\n  if (registered) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <RegisterPageStyled>\n      <div className=\"login\">\n        <h1> Register User</h1>\n        <RegisterFormStyled onSubmit={handleSubmit(onSubmit)}>\n          <input name=\"name\" type=\"name\" placeholder=\"name\" defaultValue=\"\" ref={register({ required: true })} />\n          <input name=\"email\" type=\"email\" placeholder=\"email\" defaultValue=\"\" ref={register({ required: true })} />\n          <input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"password\"\n            defaultValue=\"\"\n            ref={register({ required: true })}\n          />\n          {err && <ErrMsg>Invalid register</ErrMsg>}\n          <button type=\"submit\"> Register </button>\n\n          <Link to=\"/login\"> Login </Link>\n        </RegisterFormStyled>\n      </div>\n    </RegisterPageStyled>\n  );\n};\n\nconst ErrMsg = styled.p`\n  color: red;\n`;\n\nconst RegisterFormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  gap: 10px;\n  input {\n    height: 30px;\n    padding: 0 10px;\n  }\n  button {\n    background: #4ad2ff;\n    height: 30px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    &:hover {\n      background: #06baf6;\n    }\n  }\n`;\n\nconst RegisterPageStyled = styled.div`\n  display: grid;\n  place-content: center;\n  .login {\n    border: 1px solid black;\n    margin-top: 20px;\n    padding: 20px;\n    max-width: 90%;\n    width: 800px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Nav } from './components/nav';\nimport { Dashboards } from './pages/Dashboard';\nimport { LoginPage } from './pages/login';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { useAuth } from './context/auth';\nimport { FC } from 'react';\nimport { RegisterPage } from './pages/register';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\">\n          <LoginPage />\n        </Route>\n\n        <Route path=\"/register\">\n          <RegisterPage />\n        </Route>\n        <PrivateRoute path=\"/\">\n          <Nav />\n          <Container>\n            <Dashboards />\n          </Container>\n        </PrivateRoute>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nconst PrivateRoute: FC<any> = ({ children, ...rest }) => {\n  let auth = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth.token ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AuthProvider } from './context/auth';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}