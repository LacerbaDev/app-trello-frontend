{"version":3,"sources":["context/auth.tsx","components/nav.tsx","components/content.tsx","components/create-content.tsx","components/dashboard.tsx","services/auth.ts","services/api.mock.ts","services/index.ts","components/create-dashboard.tsx","pages/Dashboard.tsx","pages/login.tsx","pages/register.tsx","App.tsx","reportWebVitals.js","index.tsx"],"names":["authContext","createContext","login","a","logout","token","undefined","AuthProvider","children","useState","email","password","Provider","value","useAuth","useContext","StyledNav","styled","nav","Nav","onClick","ContentStyled","div","props","isDragging","Content","text","id","index","onDelete","draggableId","provided","snaphshot","ref","innerRef","draggableProps","dragHandleProps","DeleteButton","button","CreateContent","create","useForm","handleSubmit","register","control","StyledForm","onSubmit","data","name","setValue","type","placeholder","defaultValue","required","form","DashboardStyled","ContentList","isDraggingOver","Dashboard","contents","createContent","deleteContent","provider","snapshot","length","droppableId","droppableProps","map","content","AuthService","url","_token","this","fetch","method","headers","body","JSON","stringify","res","ok","json","accessToken","dashboards","position","dashboardId","ApiService","parse","dashboard","find","d","console","log","push","makeid","getDashboards","contentId","filter","c","idx","findIndex","splice","srcDashboardId","destDashboardId","srcDashboard","destDashboard","cntIdx","cnt","result","characters","charactersLength","i","charAt","Math","floor","random","authService","apiService","CreateDashboardStyled","CreateDashboard","onCreate","title","maxLength","StyledApp","Dashboards","setDashboards","onDashboardDragEnd","destination","moveDashboard","createDashboard","deleteDashboard","onContentDragEnd","source","moveContent","useEffect","getDashboard","onDragEnd","direction","creatContent","key","creatDashboard","LoginPage","err","setErr","to","LoginPageStyled","className","LoginFormStyled","ErrMsg","p","RegisterPage","registered","setRegistered","RegisterPageStyled","RegisterFormStyled","Container","App","path","PrivateRoute","rest","auth","render","location","pathname","state","from","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c4ea5aed.chunk.js","sourcesContent":["import { createContext, FC, useContext, useState } from 'react';\nimport { authService } from '../services';\n\ninterface AuthContext {\n  login: (email: string, password: string) => Promise<boolean>;\n  logout: () => void;\n  token: string | undefined;\n}\n\nexport const authContext = createContext<AuthContext>({\n  login: async () => {\n    return false;\n  },\n  logout: () => {},\n  token: undefined,\n});\n\nexport const AuthProvider: FC = ({ children }) => {\n  const [token, setToken] = useState<string>('auth');\n  const login = async (email: string, password: string) => {\n    return true;\n  };\n  const logout = () => {};\n  return <authContext.Provider value={{ token, login, logout }}>{children}</authContext.Provider>;\n};\n\nexport const useAuth = () => {\n  return useContext(authContext);\n};\n","import styled from '@emotion/styled';\nimport { useAuth } from '../context/auth';\n\nconst StyledNav = styled.nav`\n  background-color: black;\n  color: white;\n  height: 60px;\n  display: flex;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n  padding: 0 20px;\n  .spacer {\n    flex-grow: 1;\n  }\n  button {\n    border: 1px solid rgba(0, 0, 0, 0);\n    cursor: pointer;\n    &:hover {\n      border: 1px solid white;\n    }\n    background: none;\n    color: white;\n    padding: 10px;\n    font-size: 12pt;\n    font-weight: bold;\n  }\n`;\n\nexport const Nav = () => {\n  const { logout } = useAuth();\n\n  return (\n    <StyledNav>\n      <p>Lacerba d&d</p>\n      <button onClick={logout}>logout</button>\n    </StyledNav>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FC } from 'react';\nimport { Draggable } from 'react-beautiful-dnd';\n\nconst ContentStyled = styled.div<{ isDragging: boolean }>`\n  font-size: 12px;\n  padding: 5px;\n  border: 1px solid #ccc;\n  background-color: ${(props) => (props.isDragging ? 'lightgreen' : 'white')};\n  margin: 2px;\n  display: flex;\n  justify-content: space-between;\n`;\n\ninterface ContentProps {\n  text: string;\n  id: string;\n  index: number;\n  onDelete: () => void;\n}\n\nexport const Content: FC<ContentProps> = ({ text, id, index, onDelete }) => {\n  return (\n    <div>\n      <Draggable draggableId={id} index={index}>\n        {(provided, snaphshot) => (\n          <div ref={provided.innerRef} {...provided.draggableProps} {...provided.dragHandleProps}>\n            <ContentStyled isDragging={snaphshot.isDragging}>\n              <span>{text}</span>\n              <DeleteButton onClick={onDelete}> x </DeleteButton>\n            </ContentStyled>\n          </div>\n        )}\n      </Draggable>\n    </div>\n  );\n};\n\nconst DeleteButton = styled.button`\n  display: flex;\n  background-color: #ff4d4d;\n  color: white;\n  font-size: 15px;\n  font-weight: bold;\n  border: none;\n  border-radius: 5px;\n  width: 20px;\n  height: 20px;\n  place-content: center;\n  margin: 0;\n  padding: 0;\n  &:hover {\n    background-color: #ff1414;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { FC } from 'react';\nimport { useForm } from 'react-hook-form';\n\nexport const CreateContent: FC<{ create: (text: string) => void }> = ({ create }) => {\n  const { handleSubmit, register, control } = useForm<{ name: string }>();\n  const onSubmit = (data: { name: string }) => {\n    create(data.name);\n    control.setValue('name', '');\n  };\n  return (\n    <StyledForm onSubmit={handleSubmit(onSubmit)}>\n      <input type=\"text\" name=\"name\" placeholder=\"Crea contenuto\" defaultValue=\"\" ref={register({ required: true })} />\n      <input type=\"submit\" />\n    </StyledForm>\n  );\n};\n\nconst StyledForm = styled.form`\n  padding: 10px;\n  display: flex;\n\n  input[type=\"text\"] {\n    flex: 1;\n    border: 0;\n    background: #f1f1f1;\n    padding: 10px;\n    border-radius: 7px 0 0 7px;\n  }\n  input[type=\"submit\"] {\n    border: 0;\n    background: #1ec87b;\n    padding: 10px;\n    border-radius: 0 7px 7px 0;\n    font-weight: bold;\n    color: white;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { FC } from 'react';\nimport { Draggable, Droppable } from 'react-beautiful-dnd';\nimport { Content } from './content';\nimport { CreateContent } from './create-content';\n\nconst DashboardStyled = styled.div`\n  height: 100%;\n  min-height: 400px;\n  border: 1px solid #ccc;\n  border-radius: 10px;\n  display: flex;\n  flex-direction: column;\n  overflow: hidden;\n  overflow-y: scroll;\n  flex-grow: 1;\n  h2 {\n    margin: 0;\n    padding: 10px 0;\n    border-bottom: 1px solid #ccc;\n    font-size: 15px;\n    text-align: center;\n  }\n`;\n\nconst ContentList = styled.div<{ isDraggingOver: boolean }>`\n  background-color: ${(props) => (props.isDraggingOver ? 'lightblue' : 'white')};\n  height: 100%;\n  flex-grow: 1;\n  display: flex;\n  flex-direction: column;\n  gap: 5px;\n`;\n\ninterface DashboardProps {\n  id: string;\n  name: string;\n  index: number;\n  contents: { text: string; id: string }[];\n  createContent: (name: string) => void;\n  deleteContent: (id: string) => void;\n  onDelete: () => void;\n}\n\nexport const Dashboard: FC<DashboardProps> = ({\n  id,\n  name,\n  contents,\n  index,\n  createContent,\n  deleteContent,\n  onDelete,\n}) => {\n  return (\n    <Draggable draggableId={id} index={index}>\n      {(provider, snapshot) => (\n        <DashboardStyled {...provider.draggableProps} ref={provider.innerRef}>\n          <h2 {...provider.dragHandleProps}>{name}</h2>\n          {contents.length === 0 && <DeleteButton onClick={onDelete}>Delete</DeleteButton>}\n          <Droppable droppableId={id} type=\"content\">\n            {(provider, snapshot) => (\n              <ContentList\n                isDraggingOver={snapshot.isDraggingOver}\n                ref={provider.innerRef}\n                {...provider.droppableProps}\n              >\n                {contents.map((content, index) => (\n                  <Content\n                    onDelete={() => deleteContent(content.id)}\n                    key={content.id}\n                    id={content.id}\n                    index={index}\n                    text={content.text}\n                  />\n                ))}\n                {provider.placeholder}\n              </ContentList>\n            )}\n          </Droppable>\n\n          <CreateContent create={createContent} />\n        </DashboardStyled>\n      )}\n    </Draggable>\n  );\n};\n\nconst DeleteButton = styled.button`\n  margin: 2px;\n  background-color: #ff4d4d;\n  color: white;\n  font-size: 10px;\n  font-weight: bold;\n  border: none;\n  border-radius: 5px;\n  padding: 10px 5px;\n  &:hover {\n    background-color: #ff1414;\n  }\n`;\n","export class AuthService {\n  private _token: string | undefined;\n\n  constructor(private readonly url: string) {}\n\n  get token() {\n    return this._token;\n  }\n\n  async login(email: string, password: string): Promise<boolean> {\n    const res = await fetch(`${this.url}/login`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({ email, password }),\n    });\n    if (res.ok) {\n      const data: { accessToken: string } = await res.json();\n      this._token = data.accessToken;\n      return true;\n    }\n    return false;\n  }\n\n  async register(email: string, name: string, password: string): Promise<boolean> {\n    const res = await fetch(`${this.url}/register`, {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json',\n      },\n      body: JSON.stringify({ email, password, name }),\n    });\n    return res.ok;\n  }\n}\n","import { Dashboard } from '../models';\n\nlet dashboards: Dashboard[] = [\n  {\n    id: 'ckm7nn93h0121r85cfw0k7hvm',\n    name: 'Cose da fare',\n    position: 0,\n    contents: [\n      { id: 'ckm7ogrcf06440q5cdy08pzsi', text: 'Fare la spesa', position: 0, dashboardId: 'ckm7nn93h0121r85cfw0k7hvm' },\n      { id: 'ckm7ojpvv01604t5cnsnl4k0s', text: 'Riparare il tostapane', position: 1, dashboardId: 'ckm7nn93h0121r85cfw0k7hvm' },\n    ],\n  },\n  {\n    id: 'ckm0w9ba50045km5cuwgdw3ee',\n    name: 'Cose in progress',\n    position: 1,\n    contents: [\n      { id: 'ckm0w9ba10020km5c44n29xyr', text: 'Portare fuori il cane', position: 0, dashboardId: 'ckm0w9ba50045km5cuwgdw3ee' },\n      { id: 'ckm7m3ici0031s65cmyulhp53', text: 'Imparare con i corsi Lacerba', position: 1, dashboardId: 'ckm0w9ba50045km5cuwgdw3ee' },\n    ],\n  },\n  {\n    id: 'ckm7of1cc05370q5cq34eqnyj',\n    name: 'Cose fatte',\n    position: 2,\n    contents: [\n      { id: 'ckm7ok1cg03314t5cnjvj8s2m', text: 'Prenotare vacanze', position: 0, dashboardId: 'ckm7of1cc05370q5cq34eqnyj' },\n    ],\n  },\n  {\n    id: 'ckm7ojxhs03004t5c4r9ffpvj',\n    name: 'New Dashboard',\n    position: 3,\n    contents: [\n      { id: 'ckm7ojzpm03154t5cosyq5wwc', text: 'Boh...', position: 0, dashboardId: 'ckm7ojxhs03004t5c4r9ffpvj' },\n    ],\n  },\n];\n\nexport class ApiService {\n  constructor(private readonly url: string) {}\n\n  async getDashboards(): Promise<Dashboard[]> {\n    return JSON.parse(JSON.stringify(dashboards));\n  }\n\n  async createContent(text: string, dashboardId: string) {\n    const dashboard = dashboards.find((d) => d.id === dashboardId);\n    if (dashboard) {\n      console.log('adding', text);\n      dashboard.contents.push({\n        dashboardId: dashboardId,\n        id: makeid(40),\n        position: dashboard?.contents.length,\n        text: text,\n      });\n    }\n    return this.getDashboards();\n  }\n\n  createDashboard(name: string) {\n    dashboards.push({\n      contents: [],\n      id: makeid(20),\n      name: name,\n      position: dashboards.length,\n    });\n    return this.getDashboards();\n  }\n\n  deleteContent(contentId: string, dashboardId: string) {\n    const dashboard = dashboards.find((d) => d.id === dashboardId);\n    if (dashboard) {\n      dashboard.contents = dashboard.contents.filter((c) => c.id !== contentId);\n    }\n    return this.getDashboards();\n  }\n\n  deleteDashboard(dashboardId: string) {\n    dashboards = dashboards.filter((d) => d.id !== dashboardId);\n    return this.getDashboards();\n  }\n\n  moveDashboard(dashboardId: string, position: number): Promise<Dashboard[]> {\n    const idx = dashboards.findIndex((d) => d.id === dashboardId);\n    if (idx >= 0) {\n      const [d] = dashboards.splice(idx, 1);\n      dashboards.splice(position, 0, d);\n    }\n    return this.getDashboards();\n  }\n\n  async moveContent(\n    srcDashboardId: string,\n    contentId: string,\n    destDashboardId: string,\n    position: number\n  ): Promise<Dashboard[]> {\n    const srcDashboard = dashboards.find((d) => d.id === srcDashboardId);\n    if (!srcDashboard) {\n      return this.getDashboards();\n    }\n    const destDashboard = dashboards.find((d) => d.id === destDashboardId);\n    if (!destDashboard) {\n      return this.getDashboards();\n    }\n    const cntIdx = srcDashboard.contents.findIndex((c) => c.id === contentId);\n    if (cntIdx === -1) {\n      return this.getDashboards();\n    }\n    const [cnt] = srcDashboard.contents.splice(cntIdx, 1);\n    destDashboard.contents.splice(position, 0, cnt);\n    return this.getDashboards();\n  }\n}\n\nfunction makeid(length: number) {\n  var result = '';\n  var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';\n  var charactersLength = characters.length;\n  for (var i = 0; i < length; i++) {\n    result += characters.charAt(Math.floor(Math.random() * charactersLength));\n  }\n  return result;\n}\n","import { AuthService } from './auth';\nimport { ApiService } from './api.mock';\n\nconst url = 'http://localhost:4000';\nexport const authService = new AuthService(`${url}/auth`);\nexport const apiService = new ApiService(`${url}/app`);\n","import { FC } from 'react';\nimport styled from '@emotion/styled';\nimport { useForm } from 'react-hook-form';\n\nconst CreateDashboardStyled = styled.div``;\n\ninterface CreateDashboardProps {\n  onCreate: (title: string) => void;\n}\n\ninterface CreateDashboardFormData {\n  title: string;\n}\n\nexport const CreateDashboard: FC<CreateDashboardProps> = ({ onCreate }) => {\n  const { register, handleSubmit, control } = useForm<CreateDashboardFormData>();\n  const onSubmit = (data: CreateDashboardFormData) => {\n    onCreate(data.title);\n    control.setValue('title', '');\n  };\n\n  return (\n    <CreateDashboardStyled>\n      <h2>Crea Dashboard</h2>\n      <form onSubmit={handleSubmit(onSubmit)}>\n        <input name=\"title\" ref={register({ required: true, maxLength: 20 })} />\n        <button type=\"submit\"> Crea </button>\n      </form>\n    </CreateDashboardStyled>\n  );\n};\n","import styled from '@emotion/styled';\nimport { Dashboard } from '../components/dashboard';\nimport { Dashboard as DashboardModel } from '../models';\nimport { DragDropContext, Droppable, DropResult } from 'react-beautiful-dnd';\nimport { useEffect, useState } from 'react';\nimport { apiService } from '../services';\nimport { CreateDashboard } from '../components/create-dashboard';\n\nconst StyledApp = styled.div`\n  display: flex;\n  flex-direction: row;\n  flex-wrap: wrap;\n  gap: 10px;\n  overflow-y: scroll;\n`;\n\nexport function Dashboards() {\n  const [dashboards, setDashboards] = useState<DashboardModel[]>([]);\n  useEffect(() => {\n    async function getDashboard() {\n      const dashboards = await apiService.getDashboards();\n      setDashboards(dashboards);\n    }\n    getDashboard();\n  }, []);\n\n  async function onDashboardDragEnd(result: DropResult) {\n    if (!result.destination) {\n      return;\n    }\n    const position = result.destination.index;\n    const dashboardId = result.draggableId;\n    const dashboards = await apiService.moveDashboard(dashboardId, position);\n    setDashboards(dashboards);\n  }\n\n  async function creatContent(name: string, dashboardId: string) {\n    const dashboards = await apiService.createContent(name, dashboardId);\n    setDashboards(dashboards);\n  }\n\n  async function creatDashboard(name: string) {\n    const dashboards = await apiService.createDashboard(name);\n    setDashboards(dashboards);\n  }\n\n  async function deleteContent(contentId: string, dashboardId: string) {\n    const dashboards = await apiService.deleteContent(contentId, dashboardId);\n    setDashboards(dashboards);\n  }\n\n  async function deleteDashboard(dashboardId: string) {\n    const dashboards = await apiService.deleteDashboard(dashboardId);\n    setDashboards(dashboards);\n  }\n\n  async function onContentDragEnd(result: DropResult) {\n    if (!result.destination) {\n      return;\n    }\n    const srcDashboardId = result.source.droppableId;\n    const contentId = result.draggableId;\n    const destDashboardId = result.destination.droppableId;\n    const position = result.destination.index;\n    const dashboards = await apiService.moveContent(srcDashboardId, contentId, destDashboardId, position);\n    setDashboards(dashboards);\n  }\n\n  async function onDragEnd(result: DropResult) {\n    const type = result.type;\n    if (type === 'DASHBOARD') {\n      await onDashboardDragEnd(result);\n    } else if (type === 'content') {\n      await onContentDragEnd(result);\n    }\n  }\n\n  return (\n    <DragDropContext onDragEnd={onDragEnd}>\n      <Droppable droppableId=\"list\" direction=\"horizontal\" type=\"DASHBOARD\">\n        {(provided) => (\n          <StyledApp ref={provided.innerRef} {...provided.droppableProps}>\n            {dashboards.map((dashboard, index) => (\n              <Dashboard\n                deleteContent={(contentId) => deleteContent(contentId, dashboard.id)}\n                createContent={(name: string) => creatContent(name, dashboard.id)}\n                onDelete={() => deleteDashboard(dashboard.id)}\n                index={index}\n                {...dashboard}\n                key={dashboard.id}\n              />\n            ))}\n            {provided.placeholder}\n            <CreateDashboard onCreate={(name) => creatDashboard(name)} />\n          </StyledApp>\n        )}\n      </Droppable>\n    </DragDropContext>\n  );\n}\n","import styled from '@emotion/styled';\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Redirect, Link } from 'react-router-dom';\nimport { useAuth } from '../context/auth';\nimport { authService } from '../services';\n\ninterface LoginData {\n  email: string;\n  password: string;\n}\n\nexport const LoginPage = () => {\n  const [err, setErr] = useState<boolean>(false);\n  const { token, login } = useAuth();\n  const { handleSubmit, register } = useForm<{ name: string }>();\n  const onSubmit = async (data: LoginData) => {\n    setErr(false);\n    const res = await login(data.email, data.password);\n    setErr(!res);\n  };\n  if (token) {\n    return <Redirect to=\"/\" />;\n  }\n  return (\n    <LoginPageStyled>\n      <div className=\"login\">\n        <h1> Login User</h1>\n        <LoginFormStyled onSubmit={handleSubmit(onSubmit)}>\n          <input name=\"email\" type=\"email\" placeholder=\"email\" defaultValue=\"\" ref={register({ required: true })} />\n          <input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"password\"\n            defaultValue=\"\"\n            ref={register({ required: true })}\n          />\n          {err && <ErrMsg>Invalid login</ErrMsg>}\n          <button type=\"submit\"> Login</button>\n\n          <Link to=\"/register\"> Register </Link>\n        </LoginFormStyled>\n      </div>\n    </LoginPageStyled>\n  );\n};\n\nconst ErrMsg = styled.p`\n  color: red;\n`;\n\nconst LoginFormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  gap: 10px;\n  input {\n    height: 30px;\n    padding: 0 10px;\n  }\n  button {\n    background: #4ad2ff;\n    height: 30px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    &:hover {\n      background: #06baf6;\n    }\n  }\n`;\n\nconst LoginPageStyled = styled.div`\n  display: grid;\n  place-content: center;\n  .login {\n    border: 1px solid black;\n    margin-top: 20px;\n    padding: 20px;\n    max-width: 90%;\n    width: 800px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { Redirect, Link } from 'react-router-dom';\nimport { useAuth } from '../context/auth';\nimport { authService } from '../services';\n\ninterface RegisterData {\n  email: string;\n  password: string;\n  name: string;\n}\n\nexport const RegisterPage = () => {\n  const [err, setErr] = useState<boolean>(false);\n  const [registered, setRegistered] = useState<boolean>(false);\n  const { token } = useAuth();\n  const { handleSubmit, register } = useForm<{ name: string }>();\n  const onSubmit = async (data: RegisterData) => {\n    setErr(false);\n    const res = await authService.register(data.email, data.name, data.password);\n    setErr(!res);\n    if (res) {\n      setRegistered(true);\n    }\n  };\n  if (token) {\n    return <Redirect to=\"/\" />;\n  }\n  if (registered) {\n    return <Redirect to=\"/login\" />;\n  }\n\n  return (\n    <RegisterPageStyled>\n      <div className=\"login\">\n        <h1> Register User</h1>\n        <RegisterFormStyled onSubmit={handleSubmit(onSubmit)}>\n          <input name=\"name\" type=\"name\" placeholder=\"name\" defaultValue=\"\" ref={register({ required: true })} />\n          <input name=\"email\" type=\"email\" placeholder=\"email\" defaultValue=\"\" ref={register({ required: true })} />\n          <input\n            name=\"password\"\n            type=\"password\"\n            placeholder=\"password\"\n            defaultValue=\"\"\n            ref={register({ required: true })}\n          />\n          {err && <ErrMsg>Invalid register</ErrMsg>}\n          <button type=\"submit\"> Register </button>\n\n          <Link to=\"/login\"> Login </Link>\n        </RegisterFormStyled>\n      </div>\n    </RegisterPageStyled>\n  );\n};\n\nconst ErrMsg = styled.p`\n  color: red;\n`;\n\nconst RegisterFormStyled = styled.form`\n  display: flex;\n  flex-direction: column;\n  box-sizing: border-box;\n  gap: 10px;\n  input {\n    height: 30px;\n    padding: 0 10px;\n  }\n  button {\n    background: #4ad2ff;\n    height: 30px;\n    border: none;\n    border-radius: 5px;\n    cursor: pointer;\n    &:hover {\n      background: #06baf6;\n    }\n  }\n`;\n\nconst RegisterPageStyled = styled.div`\n  display: grid;\n  place-content: center;\n  .login {\n    border: 1px solid black;\n    margin-top: 20px;\n    padding: 20px;\n    max-width: 90%;\n    width: 800px;\n  }\n`;\n","import styled from '@emotion/styled';\nimport { Nav } from './components/nav';\nimport { Dashboards } from './pages/Dashboard';\nimport { LoginPage } from './pages/login';\nimport { BrowserRouter as Router, Switch, Route, Redirect } from 'react-router-dom';\nimport { useAuth } from './context/auth';\nimport { FC } from 'react';\nimport { RegisterPage } from './pages/register';\n\nconst Container = styled.div`\n  padding: 20px;\n`;\n\nfunction App() {\n  return (\n    <Router>\n      <Switch>\n        <Route path=\"/login\">\n          <LoginPage />\n        </Route>\n\n        <Route path=\"/register\">\n          <RegisterPage />\n        </Route>\n        <PrivateRoute path=\"/\">\n          <Nav />\n          <Container>\n            <Dashboards />\n          </Container>\n        </PrivateRoute>\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n\n// A wrapper for <Route> that redirects to the login\n// screen if you're not yet authenticated.\nconst PrivateRoute: FC<any> = ({ children, ...rest }) => {\n  let auth = useAuth();\n  return (\n    <Route\n      {...rest}\n      render={({ location }) =>\n        auth.token ? (\n          children\n        ) : (\n          <Redirect\n            to={{\n              pathname: '/login',\n              state: { from: location },\n            }}\n          />\n        )\n      }\n    />\n  );\n};\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { AuthProvider } from './context/auth';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <AuthProvider>\n      <App />\n    </AuthProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}